---
import dayjs from "dayjs";
import "dayjs/locale/pl.js";
import utc from "dayjs/plugin/utc";
import timezone from "dayjs/plugin/timezone";
import IconCalendar from "@/assets/icons/IconCalendar.svg";
import { SITE } from "@/config";

dayjs.extend(utc);
dayjs.extend(timezone);
dayjs.locale("pl");

export interface Props {
  class?: string;
  size?: "sm" | "lg";
  timezone: string | undefined;
  pubDatetime: string | Date;
  modDatetime: string | Date | undefined | null;
}

const {
  pubDatetime,
  modDatetime,
  size = "sm",
  class: className = "",
  timezone: postTimezone,
} = Astro.props;

/* ========== Formatted Datetime ========== */
const isModified = modDatetime && modDatetime > pubDatetime;

const datetime = dayjs(isModified ? modDatetime : pubDatetime).tz(
  postTimezone || SITE.timezone
);

const date = datetime.format("D MMMM, YYYY"); // e.g., '22 Mar, 2025'
---

<div class:list={["flex items-center gap-x-2 opacity-60", className]}>
  <IconCalendar
    class:list={[
      "inline-block size-5 min-w-[1.375rem]",
      { "scale-90": size === "sm" },
    ]}
  />

  <time
    class:list={["text-xs", { "sm:text-sm": size === "lg" }]}
    datetime={datetime.toISOString()}
    itemprop="datePublished">{date}</time
  >
</div>
